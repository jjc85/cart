services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: symfony_php
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    environment:
      APP_ENV: ${APP_ENV:-dev}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - symfony_network
    command: sh -c "composer install --no-interaction && php-fpm"

  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
       - php
    networks:
      - symfony_network

  mysql:
    image: mysql:8.0
    container_name: symfony_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - symfony_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  messenger_consumer:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: symfony_messenger_consumer
    volumes:
      - .:/var/www/html
    networks:
      - symfony_network
    depends_on:
      mysql:
        condition: service_healthy
    command: php bin/console messenger:consume async_emails --time-limit=3600
    restart: unless-stopped

  init_command:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: init_command
    volumes:
      - .:/var/www/html
      - ./docker/wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    command:
      - bash
      - -c
      - |
        /usr/local/bin/wait-for-it.sh mysql 3306 -- \
        php bin/console doctrine:migrations:migrate --no-interaction && \
        php bin/console doctrine:fixtures:load --no-interaction && \
        php bin/console doctrine:database:create --env=test && \
        php bin/console doctrine:migrations:migrate --no-interaction --env=test
    networks:
      - symfony_network
    depends_on:
      mysql:
        condition: service_healthy

  mailhog:
    image: mailhog/mailhog
    container_name: symfony_mailhog
    restart: unless-stopped
    ports:
      - "1026:1025"
      - "8026:8025"
    networks:
      - symfony_network

volumes:
  db_data:

networks:
  symfony_network:
    driver: bridge